generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(cuid())
  name             String
  teamId           String?
  profile_image_url String?
  createdAt        DateTime @default(now())

  team      Team?       @relation(fields: [teamId], references: [id])
  drinkLogs DrinkLog[]
  posts     Post[]

  @@map("users")
}

model Team {
  id             String   @id @default(cuid())
  name           String   @unique
  color          String
  logo_image_url String?
  createdAt      DateTime @default(now())

  users User[]

  @@map("teams")
}

model DrinkLog {
  id        String   @id @default(cuid())
  userId    String
  drinkType String
  points    Int
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("drink_logs")
}

model Post {
  id        String   @id @default(cuid())
  userId    String
  message   String
  image_url String?
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("posts")
}

model Commentary {
  id           String    @id @default(cuid())
  type         String    // 'milestone', 'streak', 'achievement', 'hype', 'team_event'
  message      String    // Generated message text
  priority     Int       @default(1) // 1-5 (5 = highest priority)
  metadata     Json?     // Additional data (userId, teamId, stats, context)
  isDisplayed  Boolean   @default(false)
  createdAt    DateTime  @default(now())
  displayedAt  DateTime?

  @@map("commentaries")
}